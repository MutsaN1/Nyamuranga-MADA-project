---
title: "Data Processing"
author: "Mutsa Nyamuranga"
date: "2024-02-23"
output: html_document
---



# Setup
In terms of packages, I need to load these set in order to view, explore and clean the raw data from the eLife paper. 

```{r}
library(readxl) #for loading Excel files
library(dplyr) #for data processing/cleaning
library(tidyr) #for data processing/cleaning
library(skimr) #for nice visualization of data 
library(here) #to set paths
```

# Data loading

With difficulty using the here package for creating a path to the excel document, I have chosen to use the readxl package to directly import the file into the environment. 

```{r}
# path to data
# note the use of the here() package and not absolute paths
data_location <- here::here("data/raw-data/elife-87430-data1-v1.xlsx")
rawdata <- readxl::read_excel(data_location)
```


# Check data

```{r}
range_to_read <- "A4:M24"

figure1a <- readxl::read_excel(data_location, sheet ="Figure 1-suppl figure 1" , range = range_to_read)

print(figure1a)
```

#Clean Data

Here I am taking the Figure 1a data table from the paper and clean the data to fit my purposes for analysis. I remove the standard deviation data and fix female and male onto each condition type. 

```{r}
# Remove specified columns and rows
figure1a <- figure1a[, -c(3, 5, 7, 9, 11, 13)]
figure1afixed <- figure1a[-1, ]

# Remove missing data
figure1afixed <- na.omit(figure1afixed)

# Fixing Female and Male to condition
figdata <- figure1afixed %>%
  rename(BaselineF = Baseline...2,
         ControlF = Control...4,
         BetaCaroteneF = `β-carotene...6`,
         BaselineM = Baseline...8,
         ControlM = Control...10,
         BetaCaroM = `β-carotene...12`)

# View the updated data frame
print(figdata)
str(figdata)
summary(figdata)
glimpse(figdata)
```





All done, data is clean now. 

Let's assign at the end to some final variable, this makes it easier to add further cleaning steps above.

```{R}
# Assign the cleaned data frame to a final variable
cleaned_data <- figdata
```


# Save data 

Finally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. 
This preserves coding like factors, characters, numeric, etc.  If you save as CSV, that information would get lost.
However, CSV is better for sharing with others since it's plain text. If you do CSV, you might want to write down somewhere what each variable is.

See here for some suggestions on how to store your processed data:
http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata

```{r}
save_data_location <- here::here("data","processed_data","processeddata.rds")
saveRDS(figdata, file = save_data_location)
```

# Notes

The missing data was included in order to keep whole categories from being removed. While it may weaken extrapolation in analysis coding, it is necessary for the cleaning process. 

